{"version":3,"sources":["Tmdb.js","components/MovieRows.js","components/FeaturedMovie.js","components/Header.js","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listW","results","length","marginLeft","width","map","item","key","src","poster_path","firstDate","Date","first_air_date","genres","i","push","name","description","overview","substring","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","classNmae","href","join","black","movieList","setMovieList","featuredData","setFeaturedData","blackheader","setbBlackHeader","useEffect","Tmdb","list","originals","filter","randomChosen","floor","random","chosen","id","chosenInfo","loadAll","scrollListener","scrollY","addEventListener","removeEventListener","role","aria-label","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2942c74b.chunk.js","sourcesContent":["const API_KEY = 'f332fcf34c6226f235a193894ce1cac3';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\nconst basicFetch = async (endpoint) =>{\r\nconst req = await fetch(`${API_BASE}${endpoint}`);\r\nconst json = await req.json();\r\nreturn json;\r\n}\r\nexport default{\r\n    getHomeList: async () => {\r\n        return[\r\n            {\r\n                slug:'originals',\r\n                title: 'Originais do Netflix',\r\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados para você',\r\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title: 'Em Alta',\r\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'Ação',\r\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comédia',\r\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },{\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'documentarios',\r\n                title: 'Documentários',\r\n                items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n        ]\r\n    },\r\n\r\n      getMovieInfo: async (movieId, type)=>{\r\n          let info = {};\r\n\r\n          if(movieId){\r\n              switch(type){\r\n                  case 'movie':\r\n                      info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                 break;\r\n                 case 'tv':\r\n                     info = await basicFetch(`/tv/${movieId}?language=pt-Br&api_key=${API_KEY}`);\r\n                     break;\r\n              }\r\n          }\r\n          return info;\r\n      }\r\n}","import React, { useState } from 'react';\r\nimport './MovieRows.css';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nexport default ({title, items}) =>{\r\n    const [scrollX, setScrollX] = useState(0);\r\n\r\n    const handleLeftArrow = ()=>{\r\n            let x = scrollX + Math.round(window.innerWidth / 2);\r\n            if(x > 0){\r\n                x=0;\r\n            }\r\n            setScrollX(x);\r\n    }\r\n\r\n    const handleRightArrow = ()=>{\r\n            let x = scrollX - Math.round(window.innerWidth / 2);\r\n            let listW = items.results.length * 150;\r\n            if((window.innerWidth - listW) > x){\r\n                x = (window.innerWidth - listW) -60;\r\n            }\r\n            setScrollX(x);\r\n    }\r\n\r\n    return(\r\n        <div className=\"movieRow\">\r\n            <h2>{title}</h2>\r\n\r\n            <div className=\"movieRow--left\" onClick={handleLeftArrow}>\r\n                <NavigateBeforeIcon style={{fontSize:50}}/>\r\n            </div>\r\n            <div className=\"movieRow--right\" onClick={handleRightArrow}>\r\n                <NavigateNextIcon style={{fontSize:50}}/>\r\n            </div>\r\n            \r\n            <div className=\"movieRow--listarea\">\r\n                <div className=\"movieRow--list\" style={{\r\n                    marginLeft: scrollX,\r\n                    width: items.results.length * 150\r\n                }}>\r\n\r\n                {items.results.length > 0 && items.results.map((item, key)=>(\r\n                        <div key={key} className=\"movieRow--item\">    \r\n                            <img  src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} />\r\n                        </div>\r\n                     \r\n                ))}\r\n                </div>\r\n                \r\n                </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './FeaturedMovie.css';\r\n\r\nexport default ({item})=>{\r\n\r\n    let firstDate = new Date(item.first_air_date);\r\n    let genres = [];\r\n    for(let i in item.genres){\r\n        genres.push(item.genres[i].name);\r\n    }\r\n\r\n    let description = item.overview;\r\n    if(description.length > 200){\r\n        description = description.substring(0, 200)+'...';\r\n    }\r\n\r\n    return(\r\n        <section className=\"featured\" style={{\r\n                backgroundSize: 'cover',\r\n                backgroundPosition: 'center',\r\n                backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n            }}>\r\n\r\n           <div className=\"featured--vertical\">\r\n               <div className=\"featured--horizontal\">\r\n                        <div className=\"featured--name\">{item.original_name}</div>\r\n                        <div className=\"featured--info\">\r\n                            <div className=\"featured--points\">{item.vote_average} pontos</div>\r\n                            <div className=\"featured--year\">{firstDate.getFullYear()}</div>\r\n                            <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1? 's':''}</div>\r\n                        </div>\r\n                            <div classNmae=\"featured--description\">{description}</div>\r\n                            <div className=\"featured--buttons\">\r\n                                <a href=\"#\" className=\"featured--watchbutton\"> Assitir</a>\r\n                                <a href=\"#\" className=\"featured--myListbutton\">+ Minha Lista</a>\r\n                             </div>  \r\n                         <div className=\"featured--genres\"><strong>Gêneros:</strong>{genres.join(', ')}</div>    \r\n                   </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default ({black})=>{\r\n\r\n\r\n    return(\r\n        <header className={black ? 'black':''}>\r\n            <div className=\"header--logo\">\r\n                    <a href=\"#\">\r\n                        <img src=\"https://logos-world.net/wp-content/uploads/2020/04/Netflix-Logo.png\"/>\r\n                    </a>\r\n            </div>\r\n            <div className=\"header--user\">\r\n                    <a href=\"#\">\r\n                        <img src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/e70b1333850498.56ba69ac32ae3.png\"/>\r\n                    </a>\r\n            </div>\r\n        </header>\r\n    )\r\n}","import React, { useEffect , useState } from 'react';\nimport Tmdb from './Tmdb';\nimport './App.css';\nimport MovieRow from './components/MovieRows';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport Header from './components/Header';\n\n\nexport default ()=>{\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackheader, setbBlackHeader] = useState(false);\n\n  useEffect(()=>{\n    const loadAll = async () =>{\n\n    let list = await Tmdb.getHomeList();\n    setMovieList(list);\n\n    let originals = list.filter(i=>i.slug === 'originals');\n    let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n    let chosen = originals[0].items.results[randomChosen];\n    let chosenInfo = await Tmdb.getMovieInfo(chosen.id,'tv');  \n    setFeaturedData(chosenInfo);\n  }\n  loadAll();\n  }, []);\n  \n useEffect(()=>{\n   const scrollListener = () =>{\n        if(window.scrollY > 10){\n          setbBlackHeader(true);\n        }else{\n          setbBlackHeader(false);\n        }\n   }\n   window.addEventListener('scroll',scrollListener);\n\n   return ()=>{\n     window.removeEventListener('scroll',scrollListener);\n   }\n },[]);\n\n\n  return(\n    <div className=\"page\">\n      <Header black={blackheader}/>\n\n      {featuredData &&\n      <FeaturedMovie item={featuredData}/>\n      }\n        <section className=\"lists\">\n          {movieList.map((item, key)=>(\n            <MovieRow key={key} title={item.title} items={item.items}/>\n          ))}\n          </section>\n          <footer>\n            Projeto Netflix-Clone-UI desenvolvido e mantido por:<br/> <a href=\"\">@moraisbandeira</a><br/>\n            Dados pegos da API do site Themoviedb.org <span role=\"img\" aria-label=\"laptop\">💻</span>\n          </footer>\n          {movieList.length <= 0 && \n          <div className=\"loading\">\n            <img src=\"https://media.wired.com/photos/592744d3f3e2356fd800bf00/master/w_2000,c_limit/Netflix_LoadTime.gif\" alt=\"carregando\"/>\n          </div>\n          }\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n   \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}